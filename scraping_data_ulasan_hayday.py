# -*- coding: utf-8 -*-
"""Scraping Data Ulasan Shopee.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o2TJFOU2vcc75Rt88qZHyTsTs7LKGP9W
"""
import time
import pandas as pd
from google_play_scraper import Sort, reviews_all
from langdetect import detect, DetectorFactory

# Fix seed untuk langdetect agar hasil konsisten
DetectorFactory.seed = 42

def is_indonesian(text):
    try:
        return detect(text) == 'id'
    except:
        return False  # Jika error, anggap bukan bahasa Indonesia

def scrape_google_play_reviews(app_id='com.supercell.hayday', target_reviews=60000):
    """
    Mengambil data review dari Google Play untuk aplikasi yang diinginkan.
    - app_id: ID aplikasi, default: Hay Day
    - target_reviews: target jumlah review (misalnya 60000)
    """
    all_reviews = []
    continuation_token = None

    # Loop hingga mencapai target atau data tidak lagi tersedia
    while len(all_reviews) < target_reviews:
        try:
            reviews_batch, continuation_token = reviews_all(
                app_id,
                lang='id',     # Hanya review berbahasa Indonesia
                country='id',  # Fokus ke Indonesia
                count=10000,   # Ambil 10000 review per batch jika memungkinkan
                continuation_token=continuation_token,
                sort=Sort.NEWEST  # Bisa diubah sesuai kebutuhan
            )
        except Exception as e:
            print("Terjadi error saat scraping:", e)
            break

        if not reviews_batch:
            break

        # Filter untuk pastikan review benar-benar berbahasa Indonesia
        reviews_batch = [review for review in reviews_batch if is_indonesian(review.get('content', ''))]

        all_reviews.extend(reviews_batch)

        print(f"Total review yang didapat: {len(all_reviews)}")

        if not continuation_token:
            break  # Berhenti jika tidak ada token lanjutannya

        time.sleep(2)  # Delay untuk menghindari request terlalu cepat

    # Konversi ke DataFrame dan pilih kolom yang diperlukan
    df = pd.DataFrame(all_reviews)[['content', 'score', 'at']]
    # Hapus duplikasi berdasarkan konten review
    df = df.drop_duplicates(subset=['content']).reset_index(drop=True)
    # Jika jumlah data kurang dari target, ambil sample dengan replace jika diperlukan
    if len(df) < target_reviews:
        df = df.sample(n=len(df), replace=False, random_state=42)
    else:
        df = df.sample(n=target_reviews, replace=False, random_state=42)

    return df

# Eksekusi scraping
df_reviews = scrape_google_play_reviews(app_id='com.supercell.hayday', target_reviews=60000)
print("Scraping selesai. Total review:", len(df_reviews))

df_reviews.info()

# Simpan hasil scraping ke CSV
df_reviews.to_csv('hayday_reviews.csv', index=False)
print("Data tersimpan di 'hayday_reviews.csv'")